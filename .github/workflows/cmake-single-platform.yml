name: Build and Release with Docker

on:
  push:
    tags:
      - 'v*.*.*'  # این workflow برای هر نسخه تگ شده اجرا می‌شود
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Apply dynamic build changes
        working-directory: ./client
        run: |
          # اعمال تغییرات موقت در فایل main.cpp پیش از بیلد
          sed -i 's|tcp://server:5510|tcp://localhost:5510|g' main.cpp
          sed -i 's|app.port(8080).multithreaded().run();|app.bindaddr("127.0.0.1").port(8080).multithreaded().run();|g' main.cpp

      - name: Install dependencies
        run: |
            sudo apt-get update && sudo apt-get install -y \
            build-essential \
            cmake \
            libzmq3-dev \
            g++ \
            ninja-build \
            && sudo rm -rf /var/lib/apt/lists/*

      - name: Download Conan & reqs
        run: |
          sudo wget https://github.com/conan-io/conan/releases/download/2.8.0/conan-2.8.0-amd64.deb && sudo dpkg -i conan-2.8.0-amd64.deb
          sudo conan profile detect && sudo conan install . --build=missing -s compiler=gcc -s compiler.version=11 -s compiler.libcxx=libstdc++11 -s compiler.cppstd=17
          

      - name: Build with Cmake
        run: |
          sudo cmake -G Ninja -Dzmqpp_DIR=build/Release/generators -DCrow_DIR=build/Release/generators -Dasio_DIR=build/Release/generators  -DZeroMQ_DIR=build/Release/generators -Dnlohmann_json_DIR=build/Release/generators -Dlibsodium_DIR=build/Release/generators -DCMAKE_BUILD_TYPE=Release .
          sudo cmake --build .

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }} # گرفتن نام تگ بدون refs/tags/
          release_name: ${{ github.ref_name }}
          body: 'Automatically created release for version ${{ github.ref_name }}'
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # گرفتن `upload_url` از مرحله قبلی
          asset_path: ./zmq_client
          asset_name: zmq_client
          asset_content_type: application/octet-stream
